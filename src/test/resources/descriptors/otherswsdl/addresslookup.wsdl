<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2008-2012 EBM WebSourcing, 2012-2018 Linagora

 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the New BSD License (3-clause license).

 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the New BSD License (3-clause license)
 for more details.

 You should have received a copy of the New BSD License (3-clause license)
 along with this program/library; If not, see http://directory.fsf.org/wiki/License:BSD_3Clause/
 for the New BSD License (3-clause license).
-->
<wsdl:definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.cdyne.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://ws.cdyne.com/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This service corrects U.S. addresses, provides geocoding (U.S. down to address level and Canadian to Postal Code Level), and allows you to convert zip codes (and Canadian Postal Codes) to city and state names.  We also offer PMSA, CMSA, and various other codes. &lt;b&gt;BE SURE TO USE A LICENSE KEY OF 0 FOR TESTING.&lt;/b&gt;</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.cdyne.com/">
      <s:element name="StandardizedAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="addressToCheck" type="tns:Address" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="Address">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ServiceError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="AddressError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="AddressFoundBeMoreSpecific" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="CheckDigit" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="NeededCorrection" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="FromLongitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="FromLatitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="ToLongitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="ToLatitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="AvgLongitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="AvgLatitude" type="s:decimal" />
          <s:element minOccurs="1" maxOccurs="1" name="hasDaylightSavings" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="LLCertainty" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="CountyNum" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="Firm" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DeliveryAddress" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DeliveryAddress2" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PrimaryLow" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PrimaryHigh" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PriEO" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SecEO" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SecondaryLow" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SecondaryHigh" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Secondary" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Extra" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="StateAbbrev" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ZipCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CarrierRoute" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="County" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DeliveryPoint" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="BarCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CSKey" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UpdateKey" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="RecordTypeCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CongressDistrictNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FIPS" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FinanceNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CMSA" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PMSA" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MSA" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MA" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="TimeZone" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="AreaCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PreferredCityName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CensusBlockNum" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CensusTractNum" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Primary" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PrefixDirection" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="StreetName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PostDirection" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SecondaryNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="StateLegislativeUpper" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="StateLegislativeLower" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="StandardizedAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StandardizedAddressResult" type="tns:Address" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AdvancedStandardization">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="addressToCheck" type="tns:Address" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AdvancedStandardizationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AdvancedStandardizationResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfAnyType">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="anyType" nillable="true" />
        </s:sequence>
      </s:complexType>
      <s:element name="ReturnCityState">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zipcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReturnCityStateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReturnCityStateResult" type="tns:Address" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BarcodeFontURL">
        <s:complexType />
      </s:element>
      <s:element name="BarcodeFontURLResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="BarcodeFontURLResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CCServerCheck">
        <s:complexType />
      </s:element>
      <s:element name="CCServerCheckResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CCServerCheckResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddressLine" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ZipCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StateAbbrev" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CheckAddressResult" type="tns:Address" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckAddressW2lines">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddressLine" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AddressLine2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ZipCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StateAbbrev" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CheckAddressW2linesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CheckAddressW2linesResult" type="tns:Address" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AdvancedCheckAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddressLine" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AddressLine2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ZipCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StateAbbrev" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AdvancedCheckAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AdvancedCheckAddressResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VersionInformation">
        <s:complexType />
      </s:element>
      <s:element name="VersionInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="VersionInformationResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CalculateDistanceInMiles">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="latitude1" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="longitude1" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="latitude2" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="longitude2" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CalculateDistanceInMilesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CalculateDistanceInMilesResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AlternateCities">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zipcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AlternateCitiesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AlternateCitiesResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CityStateToZipCodeMatcher">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StateAbbrev" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="IgnoreBadCitySpelling" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CityStateToZipCodeMatcherResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CityStateToZipCodeMatcherResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCongressionalDistrictByZip">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Zipcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCongressionalDistrictByZipResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCongressionalDistrictByZipResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Address" nillable="true" type="tns:Address" />
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="ArrayOfAnyType" nillable="true" type="tns:ArrayOfAnyType" />
      <s:element name="double" type="s:double" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="StandardizedAddressSoapIn">
    <wsdl:part name="parameters" element="tns:StandardizedAddress" />
  </wsdl:message>
  <wsdl:message name="StandardizedAddressSoapOut">
    <wsdl:part name="parameters" element="tns:StandardizedAddressResponse" />
  </wsdl:message>
  <wsdl:message name="AdvancedStandardizationSoapIn">
    <wsdl:part name="parameters" element="tns:AdvancedStandardization" />
  </wsdl:message>
  <wsdl:message name="AdvancedStandardizationSoapOut">
    <wsdl:part name="parameters" element="tns:AdvancedStandardizationResponse" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateSoapIn">
    <wsdl:part name="parameters" element="tns:ReturnCityState" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateSoapOut">
    <wsdl:part name="parameters" element="tns:ReturnCityStateResponse" />
  </wsdl:message>
  <wsdl:message name="BarcodeFontURLSoapIn">
    <wsdl:part name="parameters" element="tns:BarcodeFontURL" />
  </wsdl:message>
  <wsdl:message name="BarcodeFontURLSoapOut">
    <wsdl:part name="parameters" element="tns:BarcodeFontURLResponse" />
  </wsdl:message>
  <wsdl:message name="CCServerCheckSoapIn">
    <wsdl:part name="parameters" element="tns:CCServerCheck" />
  </wsdl:message>
  <wsdl:message name="CCServerCheckSoapOut">
    <wsdl:part name="parameters" element="tns:CCServerCheckResponse" />
  </wsdl:message>
  <wsdl:message name="CheckAddressSoapIn">
    <wsdl:part name="parameters" element="tns:CheckAddress" />
  </wsdl:message>
  <wsdl:message name="CheckAddressSoapOut">
    <wsdl:part name="parameters" element="tns:CheckAddressResponse" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesSoapIn">
    <wsdl:part name="parameters" element="tns:CheckAddressW2lines" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesSoapOut">
    <wsdl:part name="parameters" element="tns:CheckAddressW2linesResponse" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressSoapIn">
    <wsdl:part name="parameters" element="tns:AdvancedCheckAddress" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressSoapOut">
    <wsdl:part name="parameters" element="tns:AdvancedCheckAddressResponse" />
  </wsdl:message>
  <wsdl:message name="VersionInformationSoapIn">
    <wsdl:part name="parameters" element="tns:VersionInformation" />
  </wsdl:message>
  <wsdl:message name="VersionInformationSoapOut">
    <wsdl:part name="parameters" element="tns:VersionInformationResponse" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesSoapIn">
    <wsdl:part name="parameters" element="tns:CalculateDistanceInMiles" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesSoapOut">
    <wsdl:part name="parameters" element="tns:CalculateDistanceInMilesResponse" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesSoapIn">
    <wsdl:part name="parameters" element="tns:AlternateCities" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesSoapOut">
    <wsdl:part name="parameters" element="tns:AlternateCitiesResponse" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherSoapIn">
    <wsdl:part name="parameters" element="tns:CityStateToZipCodeMatcher" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherSoapOut">
    <wsdl:part name="parameters" element="tns:CityStateToZipCodeMatcherResponse" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipSoapIn">
    <wsdl:part name="parameters" element="tns:GetCongressionalDistrictByZip" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipSoapOut">
    <wsdl:part name="parameters" element="tns:GetCongressionalDistrictByZipResponse" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateHttpGetIn">
    <wsdl:part name="zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateHttpGetOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="BarcodeFontURLHttpGetIn" />
  <wsdl:message name="BarcodeFontURLHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="CCServerCheckHttpGetIn" />
  <wsdl:message name="CCServerCheckHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressHttpGetIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesHttpGetIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="AddressLine2" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesHttpGetOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressHttpGetIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="AddressLine2" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="VersionInformationHttpGetIn" />
  <wsdl:message name="VersionInformationHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesHttpGetIn">
    <wsdl:part name="latitude1" type="s:string" />
    <wsdl:part name="longitude1" type="s:string" />
    <wsdl:part name="latitude2" type="s:string" />
    <wsdl:part name="longitude2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesHttpGetOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesHttpGetIn">
    <wsdl:part name="zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherHttpGetIn">
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="IgnoreBadCitySpelling" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipHttpGetIn">
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateHttpPostIn">
    <wsdl:part name="zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReturnCityStateHttpPostOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="BarcodeFontURLHttpPostIn" />
  <wsdl:message name="BarcodeFontURLHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="CCServerCheckHttpPostIn" />
  <wsdl:message name="CCServerCheckHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressHttpPostIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesHttpPostIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="AddressLine2" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CheckAddressW2linesHttpPostOut">
    <wsdl:part name="Body" element="tns:Address" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressHttpPostIn">
    <wsdl:part name="AddressLine" type="s:string" />
    <wsdl:part name="AddressLine2" type="s:string" />
    <wsdl:part name="ZipCode" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AdvancedCheckAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="VersionInformationHttpPostIn" />
  <wsdl:message name="VersionInformationHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesHttpPostIn">
    <wsdl:part name="latitude1" type="s:string" />
    <wsdl:part name="longitude1" type="s:string" />
    <wsdl:part name="latitude2" type="s:string" />
    <wsdl:part name="longitude2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CalculateDistanceInMilesHttpPostOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesHttpPostIn">
    <wsdl:part name="zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AlternateCitiesHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherHttpPostIn">
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="StateAbbrev" type="s:string" />
    <wsdl:part name="IgnoreBadCitySpelling" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CityStateToZipCodeMatcherHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipHttpPostIn">
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCongressionalDistrictByZipHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:portType name="AddressLookupSoap">
    <wsdl:operation name="StandardizedAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is called by all Standard Address Routines and allows more interaction with the address system.</wsdl:documentation>
      <wsdl:input message="tns:StandardizedAddressSoapIn" />
      <wsdl:output message="tns:StandardizedAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AdvancedStandardization">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is called by all advanced address checking methods and allows for a deeper interface with the address correction.</wsdl:documentation>
      <wsdl:input message="tns:AdvancedStandardizationSoapIn" />
      <wsdl:output message="tns:AdvancedStandardizationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ReturnCityState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a zipcode and returns City, State, Lat, Long and more.  The latitude and longitude will be more precise with a plus 4.  We have added Canadian Postal Codes to this mix.  This is the only function that will pull Canadian Geo and City information.</wsdl:documentation>
      <wsdl:input message="tns:ReturnCityStateSoapIn" />
      <wsdl:output message="tns:ReturnCityStateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <wsdl:input message="tns:BarcodeFontURLSoapIn" />
      <wsdl:output message="tns:BarcodeFontURLSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <wsdl:input message="tns:CCServerCheckSoapIn" />
      <wsdl:output message="tns:CCServerCheckSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 1 line and only returns 1 match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressSoapIn" />
      <wsdl:output message="tns:CheckAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and only returns 1 possible match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressW2linesSoapIn" />
      <wsdl:output message="tns:CheckAddressW2linesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and returns all possible matches.</wsdl:documentation>
      <wsdl:input message="tns:AdvancedCheckAddressSoapIn" />
      <wsdl:output message="tns:AdvancedCheckAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Views the latest version information</wsdl:documentation>
      <wsdl:input message="tns:VersionInformationSoapIn" />
      <wsdl:output message="tns:VersionInformationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the distance between two areas using longitude and latitude.  This is calculated using spherical geometry.  This is a free function.  You can get the calculations behind this function via support@cdyne.com .</wsdl:documentation>
      <wsdl:input message="tns:CalculateDistanceInMilesSoapIn" />
      <wsdl:output message="tns:CalculateDistanceInMilesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible city names for a zipcode as an array</wsdl:documentation>
      <wsdl:input message="tns:AlternateCitiesSoapIn" />
      <wsdl:output message="tns:AlternateCitiesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:CityStateToZipCodeMatcherSoapIn" />
      <wsdl:output message="tns:CityStateToZipCodeMatcherSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:GetCongressionalDistrictByZipSoapIn" />
      <wsdl:output message="tns:GetCongressionalDistrictByZipSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="AddressLookupHttpGet">
    <wsdl:operation name="ReturnCityState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a zipcode and returns City, State, Lat, Long and more.  The latitude and longitude will be more precise with a plus 4.  We have added Canadian Postal Codes to this mix.  This is the only function that will pull Canadian Geo and City information.</wsdl:documentation>
      <wsdl:input message="tns:ReturnCityStateHttpGetIn" />
      <wsdl:output message="tns:ReturnCityStateHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <wsdl:input message="tns:BarcodeFontURLHttpGetIn" />
      <wsdl:output message="tns:BarcodeFontURLHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <wsdl:input message="tns:CCServerCheckHttpGetIn" />
      <wsdl:output message="tns:CCServerCheckHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 1 line and only returns 1 match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressHttpGetIn" />
      <wsdl:output message="tns:CheckAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and only returns 1 possible match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressW2linesHttpGetIn" />
      <wsdl:output message="tns:CheckAddressW2linesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and returns all possible matches.</wsdl:documentation>
      <wsdl:input message="tns:AdvancedCheckAddressHttpGetIn" />
      <wsdl:output message="tns:AdvancedCheckAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Views the latest version information</wsdl:documentation>
      <wsdl:input message="tns:VersionInformationHttpGetIn" />
      <wsdl:output message="tns:VersionInformationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the distance between two areas using longitude and latitude.  This is calculated using spherical geometry.  This is a free function.  You can get the calculations behind this function via support@cdyne.com .</wsdl:documentation>
      <wsdl:input message="tns:CalculateDistanceInMilesHttpGetIn" />
      <wsdl:output message="tns:CalculateDistanceInMilesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible city names for a zipcode as an array</wsdl:documentation>
      <wsdl:input message="tns:AlternateCitiesHttpGetIn" />
      <wsdl:output message="tns:AlternateCitiesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:CityStateToZipCodeMatcherHttpGetIn" />
      <wsdl:output message="tns:CityStateToZipCodeMatcherHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:GetCongressionalDistrictByZipHttpGetIn" />
      <wsdl:output message="tns:GetCongressionalDistrictByZipHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="AddressLookupHttpPost">
    <wsdl:operation name="ReturnCityState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a zipcode and returns City, State, Lat, Long and more.  The latitude and longitude will be more precise with a plus 4.  We have added Canadian Postal Codes to this mix.  This is the only function that will pull Canadian Geo and City information.</wsdl:documentation>
      <wsdl:input message="tns:ReturnCityStateHttpPostIn" />
      <wsdl:output message="tns:ReturnCityStateHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <wsdl:input message="tns:BarcodeFontURLHttpPostIn" />
      <wsdl:output message="tns:BarcodeFontURLHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <wsdl:input message="tns:CCServerCheckHttpPostIn" />
      <wsdl:output message="tns:CCServerCheckHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 1 line and only returns 1 match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressHttpPostIn" />
      <wsdl:output message="tns:CheckAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and only returns 1 possible match.</wsdl:documentation>
      <wsdl:input message="tns:CheckAddressW2linesHttpPostIn" />
      <wsdl:output message="tns:CheckAddressW2linesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method checks an address with 2 lines and returns all possible matches.</wsdl:documentation>
      <wsdl:input message="tns:AdvancedCheckAddressHttpPostIn" />
      <wsdl:output message="tns:AdvancedCheckAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Views the latest version information</wsdl:documentation>
      <wsdl:input message="tns:VersionInformationHttpPostIn" />
      <wsdl:output message="tns:VersionInformationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the distance between two areas using longitude and latitude.  This is calculated using spherical geometry.  This is a free function.  You can get the calculations behind this function via support@cdyne.com .</wsdl:documentation>
      <wsdl:input message="tns:CalculateDistanceInMilesHttpPostIn" />
      <wsdl:output message="tns:CalculateDistanceInMilesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible city names for a zipcode as an array</wsdl:documentation>
      <wsdl:input message="tns:AlternateCitiesHttpPostIn" />
      <wsdl:output message="tns:AlternateCitiesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:CityStateToZipCodeMatcherHttpPostIn" />
      <wsdl:output message="tns:CityStateToZipCodeMatcherHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all possible zipcodes for a city/state combination.  &lt;b&gt;For this function to work you must put true or false in IgnoreBadCitySpelling&lt;/b&gt;.  That flag will allow you to have cities zipcodes that have the city name spelled incorrectly.  This function is far more accurate with that flag set to false.  Use a licensekey of 0 for testing. </wsdl:documentation>
      <wsdl:input message="tns:GetCongressionalDistrictByZipHttpPostIn" />
      <wsdl:output message="tns:GetCongressionalDistrictByZipHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AddressLookupSoap" type="tns:AddressLookupSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="StandardizedAddress">
      <soap:operation soapAction="http://ws.cdyne.com/StandardizedAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedStandardization">
      <soap:operation soapAction="http://ws.cdyne.com/AdvancedStandardization" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnCityState">
      <soap:operation soapAction="http://ws.cdyne.com/ReturnCityState" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <soap:operation soapAction="http://ws.cdyne.com/BarcodeFontURL" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <soap:operation soapAction="http://ws.cdyne.com/CCServerCheck" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <soap:operation soapAction="http://ws.cdyne.com/CheckAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <soap:operation soapAction="http://ws.cdyne.com/CheckAddressW2lines" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <soap:operation soapAction="http://ws.cdyne.com/AdvancedCheckAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <soap:operation soapAction="http://ws.cdyne.com/VersionInformation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <soap:operation soapAction="http://ws.cdyne.com/CalculateDistanceInMiles" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <soap:operation soapAction="http://ws.cdyne.com/AlternateCities" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <soap:operation soapAction="http://ws.cdyne.com/CityStateToZipCodeMatcher" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <soap:operation soapAction="http://ws.cdyne.com/GetCongressionalDistrictByZip" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AddressLookupSoap12" type="tns:AddressLookupSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="StandardizedAddress">
      <soap12:operation soapAction="http://ws.cdyne.com/StandardizedAddress" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedStandardization">
      <soap12:operation soapAction="http://ws.cdyne.com/AdvancedStandardization" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnCityState">
      <soap12:operation soapAction="http://ws.cdyne.com/ReturnCityState" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <soap12:operation soapAction="http://ws.cdyne.com/BarcodeFontURL" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <soap12:operation soapAction="http://ws.cdyne.com/CCServerCheck" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <soap12:operation soapAction="http://ws.cdyne.com/CheckAddress" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <soap12:operation soapAction="http://ws.cdyne.com/CheckAddressW2lines" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <soap12:operation soapAction="http://ws.cdyne.com/AdvancedCheckAddress" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <soap12:operation soapAction="http://ws.cdyne.com/VersionInformation" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <soap12:operation soapAction="http://ws.cdyne.com/CalculateDistanceInMiles" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <soap12:operation soapAction="http://ws.cdyne.com/AlternateCities" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <soap12:operation soapAction="http://ws.cdyne.com/CityStateToZipCodeMatcher" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <soap12:operation soapAction="http://ws.cdyne.com/GetCongressionalDistrictByZip" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AddressLookupHttpGet" type="tns:AddressLookupHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="ReturnCityState">
      <http:operation location="/ReturnCityState" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <http:operation location="/BarcodeFontURL" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <http:operation location="/CCServerCheck" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <http:operation location="/CheckAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <http:operation location="/CheckAddressW2lines" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <http:operation location="/AdvancedCheckAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <http:operation location="/VersionInformation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <http:operation location="/CalculateDistanceInMiles" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <http:operation location="/AlternateCities" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <http:operation location="/CityStateToZipCodeMatcher" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <http:operation location="/GetCongressionalDistrictByZip" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AddressLookupHttpPost" type="tns:AddressLookupHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="ReturnCityState">
      <http:operation location="/ReturnCityState" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BarcodeFontURL">
      <http:operation location="/BarcodeFontURL" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CCServerCheck">
      <http:operation location="/CCServerCheck" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddress">
      <http:operation location="/CheckAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckAddressW2lines">
      <http:operation location="/CheckAddressW2lines" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdvancedCheckAddress">
      <http:operation location="/AdvancedCheckAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VersionInformation">
      <http:operation location="/VersionInformation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CalculateDistanceInMiles">
      <http:operation location="/CalculateDistanceInMiles" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AlternateCities">
      <http:operation location="/AlternateCities" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CityStateToZipCodeMatcher">
      <http:operation location="/CityStateToZipCodeMatcher" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCongressionalDistrictByZip">
      <http:operation location="/GetCongressionalDistrictByZip" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AddressLookup">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This service corrects U.S. addresses, provides geocoding (U.S. down to address level and Canadian to Postal Code Level), and allows you to convert zip codes (and Canadian Postal Codes) to city and state names.  We also offer PMSA, CMSA, and various other codes. &lt;b&gt;BE SURE TO USE A LICENSE KEY OF 0 FOR TESTING.&lt;/b&gt;</wsdl:documentation>
    <wsdl:port name="AddressLookupSoap" binding="tns:AddressLookupSoap">
      <soap:address location="http://ws.cdyne.com/psaddress/addresslookup.asmx" />
    </wsdl:port>
    <wsdl:port name="AddressLookupSoap12" binding="tns:AddressLookupSoap12">
      <soap12:address location="http://ws.cdyne.com/psaddress/addresslookup.asmx" />
    </wsdl:port>
    <wsdl:port name="AddressLookupHttpGet" binding="tns:AddressLookupHttpGet">
      <http:address location="http://ws.cdyne.com/psaddress/addresslookup.asmx" />
    </wsdl:port>
    <wsdl:port name="AddressLookupHttpPost" binding="tns:AddressLookupHttpPost">
      <http:address location="http://ws.cdyne.com/psaddress/addresslookup.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
